{"version":3,"sources":["components/WilayaSelector.js","components/CityMain.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","list","width","fullList","WilayaSelector","props","React","useState","menu","state","setState","toggleDrawer","open","event","type","key","console","log","currentWilaya","Fragment","Grid","container","spacing","item","xs","sm","md","style","paddingBottom","Button","flex","fontFamily","backgroundColor","onClick","variant","color","fontSize","textTransform","SwipeableDrawer","anchor","onClose","onOpen","role","onKeyDown","List","ListItem","ListItemText","textAlign","primary","wilayas","map","index","nom","code","nom_ar","button","selected","component","RouterLink","to","toLowerCase","replace","RegExp","direction","Divider","theme","root","TimeItem","display","borderRadius","palette","background","paper","margin","TimesList","times","time","time_ar","styles","className","fontWeight","loading","CityMain","url","geocity","wilaya","this","match","params","axios","get","then","status","data","city","loadData","newProps","plain","results","datetime","location","current_wilaya","param","p","findWilaya","find","obj","Typography","Component","THEME","createMuiTheme","typography","join","responsiveFontSizes","withStyles","backgroundSize","alignItems","minHeight","classes","path","href","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.56516103.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport wilayas from '../data/wilayas.json';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Grid } from '@material-ui/core';\r\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\r\n// import MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst useStyles = makeStyles({\r\n\tlist: {\r\n\t\twidth: 500\r\n\t},\r\n\tfullList: {\r\n\t\twidth: 'auto'\r\n\t}\r\n});\r\n\r\nexport default function WilayaSelector(props) {\r\n\tconst classes = useStyles();\r\n\tconst [state, setState] = React.useState({\r\n\t\tmenu: false\r\n\t});\r\n\r\n\tconst toggleDrawer = (open) => (event) => {\r\n\t\tif (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetState({ ...state, menu: open });\r\n\t};\r\n\tconsole.log(props.currentWilaya);\r\n\tconst list = () => (\r\n\t\t<div role=\"presentation\" onClick={toggleDrawer(false)} onKeyDown={toggleDrawer(false)}>\r\n\t\t\t<List>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemText style={{ textAlign: 'center' }} primary=\"Selectionner Wilaya\" />\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemText style={{ textAlign: 'center' }} primary=\"اختيار الولاية\" />\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t{wilayas.map(({ nom, code, nom_ar }, index) => (\r\n\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\tselected={props.currentWilaya && props.currentWilaya.code == code}\r\n\t\t\t\t\t\tcomponent={RouterLink}\r\n\t\t\t\t\t\tto={'/' + nom.toLowerCase().replace(new RegExp(/ /g), '-')}\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemText primary={code + ' - ' + nom} />\r\n\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\tprimary={code + ' - ' + nom_ar}\r\n\t\t\t\t\t\t\tstyle={{ textAlign: 'right', direction: 'rtl' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t))}\r\n\t\t\t</List>\r\n\t\t\t<Divider />\r\n\t\t\t<List></List>\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item xs={12} sm={12} md={6} style={{paddingBottom: 5}}>\r\n\t\t\t\t\t\t<Button style={{ flex: 1, width: '100%', fontFamily: 'cairo', backgroundColor: '#44AF69' }} onClick={toggleDrawer(true)} variant=\"contained\" color=\"primary\">\r\n            <span style={{flex: 1, fontSize: 15, textTransform: 'uppercase'}}>\r\n              Changer WILAYA\r\n            </span>\r\n\r\n            <span style={{flex: 1, fontSize: 15}}>\r\n              تغيير الولاية\r\n              </span>\r\n            \r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} sm={12} md={6}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tstyle={{ flex: 1, width: '100%', fontFamily: 'cairo', backgroundColor: '#F8333C' }}\r\n\t\t\t\t\t\t\tonClick={toggleDrawer(true)}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span style={{flex: 1, textTransform: 'uppercase', fontSize: 16}}>votre position</span>\r\n\t\t\t\t\t\t\t<span style={{flex: 1, fontSize: 16 }}>موقعك الحالي</span>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<SwipeableDrawer\r\n\t\t\t\t\tanchor=\"right\"\r\n\t\t\t\t\topen={state.menu}\r\n\t\t\t\t\tonClose={toggleDrawer(false)}\r\n\t\t\t\t\tonOpen={toggleDrawer(true)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{list(wilayas)}\r\n\t\t\t\t</SwipeableDrawer>\r\n\t\t\t</React.Fragment>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { List, ListItem, Typography, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport WilayaSelector from './WilayaSelector';\r\nimport wilayas from '../data/wilayas.json';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {},\r\n\tTimeItem: {\r\n\t\tdisplay: 'flex',\r\n\r\n\t\tborderRadius: 5,\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tmargin: '12px 0'\r\n\t},\r\n\tTimesList: {\r\n\t\t// backgroundColor: theme.palette.background.paper\r\n\t}\r\n}));\r\n\r\nconst TimeItem = ({ times, time, time_ar, ...props }) => {\r\n\tlet styles = useStyles();\r\n\treturn (\r\n\t\t<ListItem className={styles.TimeItem}>\r\n\t\t\t<div style={{ flex: 2, fontSize: 24, textAlign: 'left' }}>{time}</div>\r\n\t\t\t<div style={{ flex: 3, fontSize: 28, textAlign: 'center', fontWeight: 900 }}>{times && times[time]}</div>\r\n\t\t\t<div style={{ flex: 2, fontSize: 24, textAlign: 'right' }}>{time_ar}</div>\r\n\t\t</ListItem>\r\n\t);\r\n};\r\nconst TimesList = ({ times, loading, ...props }) => {\r\n\tlet styles = useStyles();\r\n\r\n\treturn (\r\n\t\t<List component=\"nav\" className={styles.TimesList}>\r\n\t\t\t<TimeItem loading={loading} times={times} time=\"Fajr\" time_ar=\"الفجر\" />\r\n\t\t\t<TimeItem loading={loading} times={times} time=\"Dhuhr\" time_ar=\"الظهر\" />\r\n\t\t\t<TimeItem loading={loading} times={times} time=\"Asr\" time_ar=\"العصر\" />\r\n\t\t\t<TimeItem loading={loading} times={times} time=\"Maghrib\" time_ar=\"المغرب\" />\r\n\t\t\t<TimeItem loading={loading} times={times} time=\"Isha\" time_ar=\"العشاء\" />\r\n\t\t</List>\r\n\t);\r\n};\r\n\r\nconst currentWilaya = (param, geocity) => {\r\n\t\r\n\tlet p = param ? param.replace(/-/g, ' ') : geocity ? geocity.toLowerCase() : '';\r\n\tlet findWilaya = wilayas.find((obj) => {\r\n\t\tif (obj.nom.toLowerCase() == p) return obj;\r\n\t});\r\n\treturn findWilaya ? findWilaya : {nom_ar: 'loading', nom: 'loading'}\r\n};\r\nconst formatWilaya = (plain) => {\r\n\tconsole.log('currentwilaya', plain);\r\n\treturn plain.toLowerCase().replace(new RegExp(/ /g), '-');\r\n};\r\nexport default class CityMain extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\turl: 'https://api.pray.zone/v2/times/today.json?city=',\r\n\t\t\ttimes: null,\r\n\t\t\tloading: false,\r\n\t\t\tgeocity: null\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet wilaya = this.props.match.params.wilaya;\r\n\r\n\t\t\r\n\r\n\t\taxios.get('https://geolocation-db.com/json/').then(({ status, data }) => {\r\n\t\t\tconsole.log(data.city);\r\n\t\t\tthis.setState({\r\n\t\t\t\tgeocity: data.city\r\n\t\t\t}, ()=>{\r\n\t\t\t\tthis.loadData(wilaya ? wilaya : null);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tcomponentWillReceiveProps(newProps) {\r\n\t\tif (newProps.match.params.wilaya !== this.props.match.wilaya) {\r\n\t\t\tlet wilaya = newProps.match.params.wilaya;\r\n\t\t\tthis.loadData(wilaya);\r\n\t\t}\r\n\t}\r\n\tloadData(wilaya) {\r\n\t\tif (!wilaya) wilaya = this.state.geocity ? formatWilaya(this.state.geocity) : '';\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tloading: true\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\taxios.get(this.state.url + wilaya).then(({ status, data }) => {\r\n\t\t\t\t\tif (status === 200) {\r\n\t\t\t\t\t\tlet { results } = data;\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\ttimes: results.datetime[0].times,\r\n\t\t\t\t\t\t\tlocation: results.location,\r\n\t\t\t\t\t\t\tloading: false\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { params } = this.props.match;\r\n\t\tconst {geocity} = this.state;\r\n\t\tconsole.log(geocity)\r\n\t\tlet current_wilaya = !!geocity ? currentWilaya(params.wilaya, geocity) : {nom_ar: 'loading', nom: 'loading'};\r\n\t\treturn (\r\n\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Typography variant=\"h2\" style={{ color: '#f0ca7f', textAlign: 'center' }}>\r\n\t\t\t\t\t\tمواقيت الصلاة لمدينة\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h3\" style={{ color: '#FFF', textAlign: 'center' }}>\r\n\t\t\t\t\t\t{current_wilaya.nom_ar}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t{current_wilaya.nom}\r\n\t\t\t\t\t\t{/* Constantine */}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<TimesList loading={this.state.loading} times={this.state.times} />\r\n\t\t\t\t\t<WilayaSelector wilayas={this.props.wilayas} currentWilaya={current_wilaya} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from 'react-router-dom';\nimport './App.css';\nimport { Grid, Typography } from '@material-ui/core';\nimport CityMain from './components/CityMain';\nimport { withStyles, MuiThemeProvider, createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\nlet styles = {\n\troot: {\n\t\tbackground: '#0b2533',\n\t\tbackgroundSize: '100% 100%',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\twidth: '100vw',\n\t\tminHeight: '100vh'\n\t}\n};\nlet THEME = createMuiTheme({\n\ttypography: {\n\t\tfontFamily: ['Nunito', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif'].join(',')\n\t}\n});\nTHEME = responsiveFontSizes(THEME);\nfunction App(props) {\n\tconst { classes } = props;\n\treturn (\n\t\t<MuiThemeProvider theme={THEME}>\n\t\t\t<Router>\n\t\t\t\t<Grid container className={classes.root} spacing={0}>\n\t\t\t\t\t<Grid item xs={1} sm={1} md={4}></Grid>\n\t\t\t\t\t<Grid item xs={10} md={4}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/:wilaya\" component={CityMain} />\n\t\t\t\t\t\t\t<Route path=\"/\" component={CityMain} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t<Typography variant=\"subtitle1\" style={{ color: '#FFF',fontFamily: 'cairo', paddingBottom: 20 }}>\n\t\t\t\t\t\t\tRéalisé par{' '}\n\t\t\t\t\t\t\t<a href=\"https://gh-soft.net\" style={{  color: 'white', fontFamily: 'cairo'  }}>\n\t\t\t\t\t\t\t\tGH Soft Algérie\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={1} sm={1} md={4}></Grid>\n\t\t\t\t</Grid>\n\t\t\t</Router>\n\t\t</MuiThemeProvider>\n\t);\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}